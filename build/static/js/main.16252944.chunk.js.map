{"version":3,"sources":["store/index.js","components/appbar.js","components/weatherDay.js","api/index.js","components/search.js","components/weatherIcon.js","components/favoriteIcon.js","components/currentCondition.js","components/home.js","components/favorites.js","App.js","reportWebVitals.js","index.js"],"names":["DailyForecastsSlice","createSlice","name","initialState","data","defaultTempUnit","reducers","set","state","action","payload","setTempUnit","FavoritesSlice","Key","Name","value","add","remove","filter","rf","CurrentCitySlice","setKey","setCity","setLocation","rootReducer","combineReducers","dailyForecasts","reducer","currentCity","favorites","Actions","DailyForecasts","actions","CurrentCity","FavoriteCities","store","configureStore","useStyles","makeStyles","gridCointainer","alignItems","justify","links","marginRight","marginLeft","justifyContent","Header","check","change","fahrenheit","celsius","useState","tempUnit","dispatch","useDispatch","classes","Box","sx","flexGrow","container","xs","className","AppBar","position","Toolbar","Typography","variant","component","Button","href","Switch","color","inputProps","onChange","checked","event","target","root","margin","marginTop","marginBottom","maxWidth","height","width","display","background","borderRadius","padding","border","boxShadow","WeatherDay","weatherIcon","date","weatherDescription","selectedUnit","Card","CardContent","style","textAlign","dayjs","format","alt","src","toFixed","apiKey","BASE_URL","getAutocompleteUrl","q","option","fontSize","SearchCity","options","setOptions","Autocomplete","filterOptions","x","LocalizedName","onInputChange","a","axios","get","res","id","renderInput","params","TextField","label","getOptionLabel","Country","ID","renderOption","props","justifySelf","iconImg","paddingTop","iconNum","num","stringNum","length","WeatherIcon","icon","description","RemoveFromFavorites","onClick","title","Tooltip","cursor","AddToFavorites","useSelector","findIndex","city","isFavorite","IconButton","information","location","CurrentCondition","item","Temperature","Metric","Value","Imperial","align","WeatherText","paddingLeft","paddingRight","padiingTop","weatherGrid","marginButtom","Home","isPending","setIsPending","error","setError","useEffect","locationKey","getFiveDaysUrl","then","map","daily","Date","Day","Icon","IconPhrase","Maximum","catch","err","message","getCurrentConditionUrl","console","log","CssBaseline","Alert","severity","Container","fixed","Grid","spacing","dailyForecast","i","subtitle","Favorites","NoFavorites","App","darkMode","setDarkMode","darkLightTheme","createTheme","palette","type","ThemeProvider","theme","Paper","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16252944.chunk.js","sourcesContent":["import { configureStore, combineReducers, createSlice } from '@reduxjs/toolkit';\n\nconst DailyForecastsSlice = createSlice({\n\tname: 'dailyForecasts',\n\tinitialState: {\n\t\tdata: [],\n\t\tdefaultTempUnit: 'C'\n\t},\n\n\treducers: {\n\t\tset: (state, action) => {\n\t\t\tstate.data = action.payload;\n\t\t\t// state.data = { ...state.data, ...action.payload };\n\t\t},\n\t\tsetTempUnit: (state, action) => {\n\t\t\tstate.defaultTempUnit = action.payload;\n\t\t}\n\t},\n});\n\nconst FavoritesSlice = createSlice({\n\tname: 'favorites',\n\tinitialState: {\n\t\tdata: [{\n\t\t\tKey: '215854',\n\t\t\tName: 'Tel Aviv',\n\t\t}],\n\t\tvalue: 0\n\t},\n\n\treducers: {\n\t\tadd: (state, action) => {\n\t\t\treturn {\n\t\t\t\tdata: [...state.data, action.payload]\n\t\t\t}\n\t\t},\n\t\tremove: (state, action) => {\n\t\t\treturn {\n\t\t\t\tdata: state.data.filter((rf) => rf.Key !== action.payload.Key)\n\t\t\t}\n\t\t}\n\t},\n});\n\nconst CurrentCitySlice = createSlice({\n\tname: 'currentCity',\n\tinitialState: {\n\t\tdata: {\n\t\t\tKey: '215854',\n\t\t\tName: 'Tel Aviv',\n\t\t},\n\t},\n\n\treducers: {\n\t\tsetKey: (state, action) => {\n\t\t\tstate.data.Key = action.payload;\n\t\t},\n\t\tsetCity: (state, action) => {\n\t\t\tstate.data = { ...state.data, ...action.payload };\n\t\t},\n\t\tsetLocation: (state, action) => {\n\n\t\t\tstate.data = action.payload;\n\t\t},\n\n\t},\n});\n\n\nconst rootReducer = combineReducers({\n\tdailyForecasts: DailyForecastsSlice.reducer,\n\tcurrentCity: CurrentCitySlice.reducer,\n\tfavorites: FavoritesSlice.reducer,\n});\n\nexport const Actions = {\n\tDailyForecasts: DailyForecastsSlice.actions,\n\tCurrentCity: CurrentCitySlice.actions,\n\tFavoriteCities: FavoritesSlice.actions,\n};\n\nexport const store = configureStore({ reducer: rootReducer });\n\n","import React, { Fragment, useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Button } from '@mui/material';\r\nimport { Actions } from '../store';\r\nimport { useDispatch } from 'react-redux';\r\nimport Switch from '@mui/material/Switch';\r\nimport WbSunnyOutlinedIcon from '@mui/icons-material/WbSunnyOutlined';\r\nimport Brightness2OutlinedIcon from '@mui/icons-material/Brightness2Outlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    gridCointainer: {\r\n        alignItems: 'center',\r\n        justify: 'space-between',\r\n    },\r\n\r\n    links: {\r\n        marginRight: '15px',\r\n        marginLeft: '15px',\r\n        justifyContent: 'space-between'\r\n    }\r\n});\r\n\r\nexport const Header = ({ check, change, fahrenheit, celsius }) => {\r\n    const [tempUnit, setTempUnit] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const handleChange = (event) => {\r\n        setTempUnit(event.target.checked)\r\n        dispatch(\r\n            Actions.DailyForecasts.setTempUnit(\r\n                tempUnit ? 'C' : 'F'\r\n            )\r\n        );\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n\r\n            <Box sx={{ flexGrow: 1 }} container xs={12} className={classes.gridCointainer}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Weather Task\r\n                        </Typography>\r\n\r\n                        <Button variant=\"contained\" href=\"/home\">Home</Button>\r\n\r\n                        <Button variant=\"contained\" href=\"/favorites\" >Favorites</Button>\r\n\r\n                        <WbSunnyOutlinedIcon />\r\n                        <Switch\r\n                            color=\"default\"\r\n                            name=\"switchDarkMode\"\r\n                            inputProps={{ 'aria-label': 'dark mode' }}\r\n                            onChange={change}\r\n                            checked={check}\r\n                        />\r\n                        <Brightness2OutlinedIcon />\r\n\r\n                        C°\r\n                        <Switch\r\n                            color=\"default\"\r\n                            name=\"switchUnitTemp\"\r\n                            inputProps={{ 'aria-label': 'temp unit' }}\r\n                            checked={tempUnit}\r\n                            onChange={handleChange}\r\n                        />\r\n                        F°\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </Fragment>\r\n    );\r\n}","import React, { Fragment } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport dayjs from 'dayjs';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: '10px',\r\n        marginTop: '30px',\r\n        marginLeft: '50px',\r\n        marginBottom: '50px',\r\n        maxWidth: 200,\r\n        height: '12rem',\r\n        width: '9rem',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        background: 'linear-gradient(rgba(0, 185, 195, 0.5), rgba(16, 76, 120, 0.1))',\r\n        borderRadius: '0.5rem',\r\n        padding: '10px',\r\n        border: '3px solid rgba(32, 45, 44, 0.7)',\r\n        boxShadow: '2px 2px 2px rgba(29, 40, 44, 0.5)'\r\n    },\r\n\r\n});\r\n\r\nexport const WeatherDay = ({ weatherIcon, date, weatherDescription, celsius, fahrenheit, selectedUnit }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Card className={classes.root} >\r\n                <CardContent style={{ textAlign: \"center\" }} >\r\n                    <Typography component='h6' variant='h6'>\r\n                        {dayjs(date).format('ddd')}\r\n                    </Typography >\r\n\r\n                    <img\r\n                        alt={weatherDescription}\r\n                        src={`https://developer.accuweather.com/sites/default/files/${weatherIcon}-s.png`} />\r\n                    <Typography>\r\n\r\n                        {selectedUnit === 'C' ? `${celsius?.toFixed(1)}° C` : `${fahrenheit?.toFixed(1)}° F`}\r\n                    </Typography>\r\n                    <Typography>\r\n                        {weatherDescription}\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Fragment >\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","const apiKey = 'wSI4CAPApVWmdBbGbtB0HiamA9Xnnm9m'\r\nconst BASE_URL = 'https://dataservice.accuweather.com';\r\n\r\nexport const getFiveDaysUrl = (locationKey = '215854') => {\r\n\treturn `${BASE_URL}/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}&metric=true`;\r\n};\r\n\r\nexport const getAutocompleteUrl = (q = 'Tel Aviv') => {\r\n\treturn `${BASE_URL}/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${q}`;\r\n};\r\n\r\nexport const getCurrentConditionUrl = (locationKey = '215854') => {\r\n\treturn `${BASE_URL}/currentconditions/v1/${locationKey}?apikey=${apiKey}`;\r\n};\r\n\r\nexport const getCurrentLocationUrl = (lat = '32.045', lon = '34.77') => {\r\n\treturn `${BASE_URL}/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${lat}, ${lon}`\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\nexport const GetCurrentLocation = ({ data: { LocalizedName, Key } }) => ({\r\n\tname: LocalizedName,\r\n\tlocationKey: Key,\r\n});\r\n\r\n\r\n\r\nexport const ToFahrenheit = celsius => {\r\n\treturn celsius * (9 / 5) + 32;\r\n};\r\n\r\n","import React, { useState, Fragment } from 'react';\r\nimport { TextField, Autocomplete } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Actions } from '../store';\r\nimport axios from 'axios';\r\nimport { getAutocompleteUrl } from '../api';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\toption: {\r\n\t\tfontSize: 15,\r\n\t\t'& > span': {\r\n\t\t\tmarginRight: 10,\r\n\t\t\tfontSize: 18,\r\n\t\t},\r\n\t},\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\tmarginTop: '15px'\r\n\t},\r\n});\r\n\r\nexport const SearchCity = () => {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst [options, setOptions] = useState([]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t\tfilterOptions={x => x}\r\n\t\t\t\t\tonChange={(event, value) => {\r\n\t\t\t\t\t\tif (!value || !value.Key) return;\r\n\t\t\t\t\t\tdispatch(Actions.CurrentCity.setCity({ Key: value.Key, Name: value.LocalizedName }));\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tonInputChange={async (event) => {\r\n\t\t\t\t\t\tconst q = event.target.value;\r\n\t\t\t\t\t\tif (!q) return;\r\n\t\t\t\t\t\tconst res = await axios.get(getAutocompleteUrl(q));\r\n\t\t\t\t\t\tsetOptions(() => res.data);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tid='combo-box-demo'\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tsx={{ width: 350 }}\r\n\t\t\t\t\trenderInput={(params) => {\r\n\t\t\t\t\t\treturn <TextField {...params} variant='outlined' label='Search Location' />;\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tgetOptionLabel={option => {\r\n\t\t\t\t\t\treturn `${option.Country.LocalizedName}, ${option.Country.ID}`;\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\trenderOption={(props, option) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<h4 key={option.Key} {...props}>{`${option.LocalizedName}, ${option.Country.ID}`}</h4>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Fragment>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst useStyles = {\r\n\tcontainer: {\r\n\t\twidth: '100px',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tjustifySelf: 'center',\r\n\t},\r\n\ticonImg: {\r\n\t\tpaddingTop: '5px',\r\n\t\twidth: '100 %',\r\n\t},\r\n};\r\n\r\nexport const iconNum = num => {\r\n\tconst stringNum = num + '';\r\n\tconst stringLen = stringNum.length;\r\n\r\n\tif (stringLen === 1) {\r\n\t\treturn '0' + stringNum;\r\n\t} else {\r\n\t\treturn stringNum;\r\n\t}\r\n};\r\n\r\nexport const WeatherIcon = ({ icon, description }) => (\r\n\t<Container >\r\n\t\t<div className={useStyles.container}>\r\n\t\t\t<img\r\n\t\t\t\tclassName={useStyles.iconImg}\r\n\t\t\t\tsrc={`https://developer.accuweather.com/sites/default/files/${iconNum(icon)}-s.png`}\r\n\t\t\t\talt={description}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</Container>\r\n);\r\n","import Tooltip from '@material-ui/core/Tooltip';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, Typography } from '@mui/material';\r\nimport { Actions } from '../store';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n    action: {\r\n        fontSize: '2.6rem',\r\n        padding: '0.5rem',\r\n        display: 'flex',\r\n    },\r\n});\r\n\r\nconst isFavorite = (favorites, currentCity) => {\r\n    return favorites.findIndex(city => city.Key === currentCity?.Key) !== -1\r\n}\r\n\r\nconst RemoveFromFavorites = ({\r\n    onClick,\r\n    title = 'Add to favorites',\r\n}) => (\r\n    <Tooltip title={title}>\r\n        <FavoriteBorderIcon\r\n            cursor='pointer'\r\n            aria-label={title}\r\n            color='error'\r\n            onClick={onClick}\r\n        />\r\n    </Tooltip>\r\n);\r\n\r\nconst AddToFavorites = ({\r\n    onClick,\r\n    title = 'Remove from favorites',\r\n}) => (\r\n    <Tooltip title={title}>\r\n        <Favorite\r\n            cursor='pointer'\r\n            aria-label={title}\r\n            color='secondary'\r\n            onClick={onClick}\r\n\r\n        />\r\n    </Tooltip>\r\n);\r\nexport const FavoriteCity = ({ favoriteCity }) => {\r\n    const classes = useStyles()\r\n    const defaultTempUnit = useSelector(state => state.dailyForecasts.defaultTempUnit)\r\n\r\n    return (\r\n        <Container>\r\n            <Grid item className={classes.location}>\r\n                {/* <Typography component={'h3'} variant=\"h6\">\r\n                    {favoriteCity.Name}\r\n                </Typography> */}\r\n                <Typography>\r\n                    {defaultTempUnit === 'C' ? `${favoriteCity?.Temperature?.Metric?.Value}° C` : `${favoriteCity?.Temperature?.Imperial?.Value}° F`}\r\n                </Typography>\r\n\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport const CurrentCity = () => {\r\n    const currentCity = useSelector(state => state.currentCity.data);\r\n    const dispatch = useDispatch();\r\n    const favorites = useSelector(state => state.favorites.data);\r\n\r\n    return (\r\n        isFavorite(favorites, currentCity) ? (\r\n            <IconButton onClick={() => dispatch(Actions.FavoriteCities.remove({ Key: currentCity.Key }))}  >\r\n                <AddToFavorites />\r\n            </IconButton>\r\n        )\r\n            :\r\n            (<IconButton onClick={() => dispatch(Actions.FavoriteCities.add({ Key: currentCity.Key, Name: currentCity.Name }))}>\r\n                <RemoveFromFavorites />\r\n            </IconButton>)\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport { WeatherIcon } from './weatherIcon';\r\nimport { CurrentCity } from './favoriteIcon';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Grid, Typography } from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst useStyles = makeStyles({\r\n\tcontainer: {\r\n\t\tmarginTop: '20px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tborder: '2px solid #eee',\r\n\t\tborderRadius: '0.5rem',\r\n\t\tpadding: '1rem',\r\n\t\tmarginBottom: '15px',\r\n\t},\r\n\tactions: {\r\n\t\tfontSize: '2.6rem',\r\n\t\tpadding: '0.5rem',\r\n\t\tmarginLeft: 'auto'\r\n\t},\r\n\tinformation: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tlocation: {\r\n\t\ttextAlign: 'start',\r\n\t\tmargin: 0\r\n\t},\r\n\tdescription: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '50px',\r\n\t\talignItems: 'center',\r\n\t\tjustify: 'center'\r\n\t}\r\n});\r\n\r\nexport const CurrentCondition = ({ selectedUnit }) => {\r\n\tconst classes = useStyles();\r\n\tconst currentCity = useSelector(state => state.currentCity.data);\r\n\r\n\tif (!currentCity) {\r\n\t\treturn 'no city';\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentCity && (\r\n\t\t\t<>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Grid container className={classes.container}>\r\n\r\n\t\t\t\t\t\t<Grid item className={classes.information} >\r\n\t\t\t\t\t\t\t<WeatherIcon icon={currentCity?.WeatherIcon} />\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\r\n\t\t\t\t\t\t<Grid item className={classes.location}>\r\n\t\t\t\t\t\t\t<Typography component={'h3'} variant=\"h6\">\r\n\t\t\t\t\t\t\t\t{currentCity.Name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t{selectedUnit === 'C' ? `${currentCity?.Temperature?.Metric?.Value}° C` : `${currentCity?.Temperature?.Imperial?.Value}° F`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<div className={classes.actions}>\r\n\t\t\t\t\t\t\t<IconButton >\r\n\t\t\t\t\t\t\t\t{/* <LocationIcon /> */}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t<IconButton >\r\n\t\t\t\t\t\t\t\t<CurrentCity />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography component={'h5'}\r\n\t\t\t\t\t\t\tvariant={'h5'}\r\n\t\t\t\t\t\t\talign={'center'}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{currentCity.WeatherText}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t)\r\n\t);\r\n};\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { WeatherDay } from './weatherDay';\r\nimport { Actions } from '../store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SearchCity } from './search';\r\nimport { CssBaseline, Grid, Container, Typography } from '@material-ui/core';\r\nimport { CurrentCondition } from './currentCondition';\r\nimport { iconNum } from './weatherIcon'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@mui/material/Alert';\r\nimport { getFiveDaysUrl, getCurrentConditionUrl, ToFahrenheit } from '../api'\r\n\r\nconst useStyles = makeStyles({\r\n\tgridCointainer: {\r\n\t\tpaddingLeft: '50px',\r\n\t\tpaddingRight: '60px',\r\n\t\tpadiingTop: '30px',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\talign: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\r\n\tweatherGrid: {\r\n\t\talignItems: 'center',\r\n\t\tborder: '1px solid rgba(173, 173, 235)',\r\n\t\tboxShadow: '2px 2px 2px rgba(27, 38, 44, 0.5)',\r\n\t\tmarginRight: '20px',\r\n\t\tmarginLeft: '20px',\r\n\t\tmarginTop: '20px',\r\n\t\tmarginBottom: '20px'\r\n\t},\r\n\r\n\ttitle: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: 'rgb(0,76,153)',\r\n\t\tpaddingTop: '15px',\r\n\t\tmarginButtom: '15px',\r\n\r\n\t},\r\n});\r\n\r\nexport const Home = () => {\r\n\tconst classes = useStyles();\r\n\tconst [isPending, setIsPending] = useState(true)\r\n\tconst [error, setError] = useState(null)\r\n\tconst dailyForecasts = useSelector(state => state.dailyForecasts.data);\r\n\tconst defaultTempUnit = useSelector(state => state.dailyForecasts.defaultTempUnit)\r\n\tconst currentCity = useSelector(state => state.currentCity.data);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get(getFiveDaysUrl(currentCity.Key)).then(res => {\r\n\t\t\tsetIsPending(false);\r\n\t\t\tsetError(null);\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tActions.DailyForecasts.set(\r\n\t\t\t\t\tres.data.DailyForecasts.map(daily => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdate: daily.Date,\r\n\t\t\t\t\t\t\tweatherIcon: iconNum(daily.Day.Icon),\r\n\t\t\t\t\t\t\tweatherDescription: daily.Day.IconPhrase,\r\n\t\t\t\t\t\t\tcelsius: daily.Temperature.Maximum.Value,\r\n\t\t\t\t\t\t\tfahrenheit: ToFahrenheit(daily.Temperature.Maximum.Value)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}).catch(err =>\r\n\t\t\t(setIsPending(false))\r\n\t\t\t\t(setError(err.message))\r\n\r\n\t\t);\r\n\t\taxios.get(getCurrentConditionUrl(currentCity.Key)).then(res => {\r\n\t\t\tconst data = {\r\n\t\t\t\tweatherText: res.data[0].WeatherText,\r\n\t\t\t\tweatherIcon: iconNum(res.data[0].WeatherIcon),\r\n\t\t\t\tcelsius: res.data[0].Temperature.Metric.Value,\r\n\t\t\t\tfahrenheit: res.data[0].Temperature.Imperial.Value\r\n\t\t\t};\r\n\t\t\tdispatch(Actions.CurrentCity.setCity(res.data[0]));\r\n\t\t}).catch(err => console.log(err.message)\r\n\t\t);\r\n\t}, [currentCity.Key]);\r\n\r\n\treturn (\r\n\t\t<Fragment >\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div>\r\n\t\t\t\t{error && <Alert variant=\"filled\" severity=\"error\">{error}</Alert>}\r\n\t\t\t</div>\r\n\r\n\t\t\t<Container fixed>\r\n\t\t\t\t<Grid container spacing={2} className={classes.gridCointainer}>\r\n\r\n\t\t\t\t\t{isPending && <div>Loading...</div>}\r\n\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<SearchCity />\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item xs={12} className={classes.weatherGrid}>\r\n\t\t\t\t\t\t<Grid item  >\r\n\t\t\t\t\t\t\t<CurrentCondition selectedUnit={defaultTempUnit} />\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid className={classes.title}>\r\n\t\t\t\t\t\t\t<Typography component='h5' variant='h4' color='primary' >\r\n\t\t\t\t\t\t\t\tFive Days Forcast\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t{dailyForecasts.map((dailyForecast, i) => (\r\n\t\t\t\t\t\t\t\t<WeatherDay key={i} {...dailyForecast} selectedUnit={defaultTempUnit} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\r\n\t\t</Fragment >\r\n\r\n\t);\r\n};\r\n\r\n","import React from 'react';\r\nimport { Container, Grid, Typography } from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        align: 'center',\r\n        paddingTop: '30px'\r\n    },\r\n    subtitle: {\r\n        paddingTop: '80px'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const Favorites = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={3}>\r\n                <Grid item className={classes.title}>\r\n                    <Typography component={'h4'} variant={'h4'} color={'blue'} align={'center'}>\r\n                        Your Favorite Cities\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                {/* <Grid item xs={12}>\r\n                    {favorites.map((favorite, i) => (\r\n                        <FavoriteCity key={i} {...favorite} />\r\n                    ))}\r\n                </Grid> */}\r\n\r\n                <Grid className={classes.subtitle}>\r\n                    <NoFavorites />\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst NoFavorites = () => {\r\n    return (\r\n        <div>\r\n            <Typography component={'h6'} variant={'h6'} >\r\n                There are no favorite cities. Please Choose\r\n            </Typography>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React, { Fragment } from \"react\";\nimport { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport { Header } from './components/appbar';\nimport { Paper } from '@material-ui/core';\nimport { Home } from './components/home';\nimport { Favorites } from './components/favorites';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const darkLightTheme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  })\n\n  return (\n    <ThemeProvider theme={darkLightTheme}>\n      <Fragment>\n        <Paper style={{ height: \"120vh\" }}>\n          <div className=\"App\">\n            <Header check={darkMode} change={() => setDarkMode(!darkMode)} />\n            <Router>\n              <Switch>\n                <Route path=\"/favorites\" component={Favorites} />\n                <Route path=\"/home\" component={Home} />\n                <Route path=\"/\">\n                  <Redirect to=\"/home\" />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        </Paper>\n      </Fragment>\n    </ThemeProvider>\n\n  )\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}