{"version":3,"sources":["store/index.js","components/appbar.js","components/weatherDay.js","api/index.js","components/search.js","components/weatherIcon.js","components/favoriteIcon.js","components/locationIcon.js","components/currentCondition.js","components/home.js","components/favorites.js","App.js","reportWebVitals.js","index.js"],"names":["DailyForecastsSlice","createSlice","name","initialState","data","defaultTempUnit","reducers","setForcast","state","action","payload","setTempUnit","CurrentCitySlice","Key","Name","setCity","localFavorites","JSON","parse","localStorage","getItem","FavoritesSlice","add","remove","filter","rf","CurrentLocationSlice","hasNavigationError","setLocation","setNavigationError","rootReducer","combineReducers","dailyForecasts","reducer","currentCity","favorites","location","Actions","DailyForecasts","actions","CurrentCity","FavoriteCities","CurrentLocation","store","configureStore","useStyles","makeStyles","gridCointainer","alignItems","justify","links","marginRight","marginLeft","justifyContent","Header","check","change","useState","tempUnit","dispatch","useDispatch","classes","Box","sx","flexGrow","container","xs","className","AppBar","position","Toolbar","Typography","variant","component","Button","href","Switch","color","inputProps","onChange","checked","event","target","root","margin","maxWidth","height","width","display","background","borderRadius","padding","WeatherDay","weatherIcon","date","weatherDescription","celsius","fahrenheit","selectedUnit","Card","CardContent","style","textAlign","dayjs","format","alt","src","toFixed","apiKey","process","REACT_APP_API_KEY","BASE_URL","getAutocompleteUrl","q","getCurrentConditionUrl","locationKey","option","fontSize","marginTop","SearchCity","options","setOptions","inputChanged","value","axios","get","res","debouncedOnChange","debounce","Autocomplete","filterOptions","x","LocalizedName","onInputChange","id","renderInput","params","TextField","label","getOptionLabel","Country","ID","renderOption","props","key","justifySelf","iconImg","paddingTop","iconNum","num","stringNum","length","WeatherIcon","icon","description","marginBottom","border","boxShadow","RemoveFromFavorites","onClick","title","Tooltip","cursor","AddToFavorites","FavoriteCity","weatherText","useSelector","findIndex","city","isFavorite","LocationIcon","IconButton","alert","lat","lon","getCurrentLocationUrl","latitude","longitude","then","information","CurrentCondition","item","Temperature","Metric","Value","Imperial","align","WeatherText","boxSizing","flexDirection","weatherGrid","marginButtom","Home","isPending","setIsPending","error","setError","useEffect","getFiveDaysUrl","map","daily","Date","Day","Icon","IconPhrase","Maximum","catch","err","message","CssBaseline","Alert","severity","Container","fixed","Grid","spacing","dailyForecast","i","paddingBottom","subtitle","Favorites","history","useHistory","items","setItems","promises","fav","Promise","all","responses","result","favorite","push","NoFavorites","App","darkMode","setDarkMode","onSuccess","currentLocation","coords","onError","navigator","geolocation","getCurrentPosition","setItem","stringify","darkLightTheme","createTheme","palette","type","ThemeProvider","theme","Paper","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5fc3dba.chunk.js","sourcesContent":["import { configureStore, combineReducers, createSlice } from '@reduxjs/toolkit';\n\nconst DailyForecastsSlice = createSlice({\n\tname: 'dailyForecasts',\n\tinitialState: {\n\t\tdata: [],\n\t\tdefaultTempUnit: 'C'\n\t},\n\treducers: {\n\t\tsetForcast: (state, action) => {\n\t\t\tstate.data = action.payload;\n\t\t},\n\t\tsetTempUnit: (state, action) => {\n\t\t\tstate.defaultTempUnit = action.payload;\n\t\t}\n\t}\n});\n\nconst CurrentCitySlice = createSlice({\n\tname: 'currentCity',\n\tinitialState: {\n\t\tdata: {\n\t\t\tKey: '215854',\n\t\t\tName: 'Tel Aviv',\n\t\t},\n\t},\n\treducers: {\n\t\tsetCity: (state, action) => {\n\t\t\tstate.data = { ...state.data, ...action.payload };\n\t\t}\n\t},\n});\n\nconst localFavorites = JSON.parse(localStorage.getItem('favorites'));\nconst FavoritesSlice = createSlice({\n\tname: 'favorites',\n\tinitialState: {\n\t\tdata: localFavorites ? localFavorites : []\n\t},\n\treducers: {\n\t\tadd: (state, action) => {\n\t\t\treturn {\n\t\t\t\tdata: [...state.data, action.payload]\n\t\t\t}\n\t\t},\n\t\tremove: (state, action) => {\n\t\t\treturn {\n\t\t\t\tdata: state.data.filter((rf) => rf.Key !== action.payload.Key)\n\t\t\t}\n\t\t}\n\t},\n});\n\nconst CurrentLocationSlice = createSlice({\n\tname: 'currentLocation',\n\tinitialState: {\n\t\tdata: null,\n\t\thasNavigationError: false\n\t},\n\treducers: {\n\t\tsetLocation: (state, action) => {\n\t\t\tstate.data = action.payload;\n\t\t},\n\t\tsetNavigationError: (state, action) => {\n\t\t\tstate.hasNavigationError = action.payload;\n\t\t}\n\t}\n});\n\nconst rootReducer = combineReducers({\n\tdailyForecasts: DailyForecastsSlice.reducer,\n\tcurrentCity: CurrentCitySlice.reducer,\n\tfavorites: FavoritesSlice.reducer,\n\tlocation: CurrentLocationSlice.reducer\n});\n\nexport const Actions = {\n\tDailyForecasts: DailyForecastsSlice.actions,\n\tCurrentCity: CurrentCitySlice.actions,\n\tFavoriteCities: FavoritesSlice.actions,\n\tCurrentLocation: CurrentLocationSlice.actions\n};\n\nexport const store = configureStore({ reducer: rootReducer });\n\n","import React, { Fragment, useState } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Button } from \"@mui/material\";\nimport { Actions } from \"../store\";\nimport { useDispatch } from \"react-redux\";\nimport Switch from \"@mui/material/Switch\";\nimport WbSunnyOutlinedIcon from \"@mui/icons-material/WbSunnyOutlined\";\nimport Brightness2OutlinedIcon from \"@mui/icons-material/Brightness2Outlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  gridCointainer: {\n    alignItems: \"center\",\n    justify: \"space-between\",\n  },\n\n  links: {\n    marginRight: \"15px\",\n    marginLeft: \"15px\",\n    justifyContent: \"space-between\",\n  },\n});\n\nexport const Header = ({ check, change }) => {\n  const [tempUnit, setTempUnit] = useState(false);\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    setTempUnit(event.target.checked);\n    dispatch(Actions.DailyForecasts.setTempUnit(tempUnit ? \"C\" : \"F\"));\n  };\n\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <Box\n        sx={{ flexGrow: 1 }}\n        container\n        xs={12}\n        className={classes.gridCointainer}\n      >\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Weather App\n            </Typography>\n            <Button variant=\"contained\" href=\"/home\">\n              Home\n            </Button>\n            <Button variant=\"contained\" href=\"/favorites\">\n              Favorites\n            </Button>\n            <WbSunnyOutlinedIcon />\n            <Switch\n              color=\"default\"\n              name=\"switchDarkMode\"\n              inputProps={{ \"aria-label\": \"dark mode\" }}\n              onChange={change}\n              checked={check}\n            />\n            <Brightness2OutlinedIcon />\n            C°\n            <Switch\n              color=\"default\"\n              name=\"switchUnitTemp\"\n              inputProps={{ \"aria-label\": \"temp unit\" }}\n              checked={tempUnit}\n              onChange={handleChange}\n            />\n            F°\n          </Toolbar>\n        </AppBar>\n      </Box>\n    </Fragment>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport dayjs from \"dayjs\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"30px\",\n    maxWidth: 200,\n    height: \"12rem\",\n    width: \"9rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    background:\n      \"linear-gradient(rgba(0, 185, 195, 0.5), rgba(16, 76, 120, 0.1))\",\n    borderRadius: \"0.5rem\",\n    padding: \"10px\",\n    // border: \"3px solid rgba(32, 45, 44, 0.7)\",\n    // boxShadow: \"2px 2px 2px rgba(29, 40, 44, 0.5)\",\n  },\n});\n\nexport const WeatherDay = ({\n  weatherIcon,\n  date,\n  weatherDescription,\n  celsius,\n  fahrenheit,\n  selectedUnit,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Card className={classes.root}>\n        <CardContent style={{ textAlign: \"center\" }}>\n          <Typography component=\"h6\" variant=\"h6\">\n            {dayjs(date).format(\"ddd\")}\n          </Typography>\n          <img\n            alt={weatherDescription}\n            src={`https://developer.accuweather.com/sites/default/files/${weatherIcon}-s.png`}\n          />\n          <Typography>\n            {selectedUnit === \"C\"\n              ? `${celsius?.toFixed(1)}° C`\n              : `${fahrenheit?.toFixed(1)}° F`}\n          </Typography>\n          <Typography>{weatherDescription}</Typography>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n};\n","const apiKey = process.env.REACT_APP_API_KEY || 'sKy9BIjAvMMsu1URNtqHRKLxKxb8F2RL'\nconst BASE_URL = 'https://dataservice.accuweather.com';\n\n\nexport const getFiveDaysUrl = (locationKey = '215854') => {\n\treturn `${BASE_URL}/forecasts/v1/daily/5day/${locationKey}?apikey=${apiKey}&metric=true`;\n};\n\nexport const getAutocompleteUrl = (q = 'Tel Aviv') => {\n\treturn `${BASE_URL}/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${q}`;\n};\n\nexport const getCurrentConditionUrl = (locationKey = '215854') => {\n\treturn `${BASE_URL}/currentconditions/v1/${locationKey}?apikey=${apiKey}`;\n};\n\nexport const getCurrentLocationUrl = (lat = '32.045', lon = '34.77') => {\n\n\treturn `${BASE_URL}/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${lat}, ${lon}`\n}\n\n// ---------------------------------------------------------------------------------------------------------------------\n\nexport const ToFahrenheit = celsius => {\n\treturn celsius * (9 / 5) + 32;\n};\n\n","import React, { useState, Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { TextField, Autocomplete } from \"@mui/material\";\nimport { debounce } from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Actions } from \"../store\";\nimport { getAutocompleteUrl } from \"../api\";\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    \"& > span\": {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"15px\",\n  },\n});\n\nexport const SearchCity = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [options, setOptions] = useState([]);\n\n  const onChange = (event, value) => {\n    if (!value || !value.Key) return;\n    dispatch(\n      Actions.CurrentCity.setCity({ Key: value.Key, Name: value.LocalizedName })\n    );\n  };\n\n  const inputChanged = async (event) => {\n    const q = event.target.value;\n    if (!q) return;\n    const res = await axios.get(getAutocompleteUrl(q));\n    setOptions(() => res.data);\n  };\n  const debouncedOnChange = debounce(inputChanged, 1000);\n\n  return (\n    <div className={classes.container}>\n      <Fragment>\n        <Autocomplete\n          filterOptions={(x) => x}\n          onChange={onChange}\n          onInputChange={debouncedOnChange}\n          id=\"combo-box-demo\"\n          options={options}\n          sx={{ width: 350 }}\n          renderInput={(params) => {\n            return (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Search Location\"\n              />\n            );\n          }}\n          getOptionLabel={(option) => {\n            return `${option.Country.LocalizedName}, ${option.Country.ID}`;\n          }}\n          renderOption={(props, option) => {\n            return (\n              <h4\n                {...props}\n                key={option.Key}\n              >{`${option.LocalizedName}, ${option.Country.LocalizedName}`}</h4>\n            );\n          }}\n        />\n      </Fragment>\n    </div>\n  );\n};\n","import React from 'react';\nimport Container from '@mui/material/Container';\n\nconst useStyles = {\n\tcontainer: {\n\t\twidth: '100px',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tjustifySelf: 'center',\n\t},\n\ticonImg: {\n\t\tpaddingTop: '5px',\n\t\twidth: '100 %',\n\t},\n};\n\nexport const iconNum = num => {\n\tconst stringNum = num + '';\n\tconst stringLen = stringNum.length;\n\n\tif (stringLen === 1) {\n\t\treturn '0' + stringNum;\n\t} else {\n\t\treturn stringNum;\n\t}\n};\n\nexport const WeatherIcon = ({ icon, description }) => (\n\t<Container >\n\t\t<div className={useStyles.container}>\n\t\t\t<img\n\t\t\t\tclassName={useStyles.iconImg}\n\t\t\t\tsrc={`https://developer.accuweather.com/sites/default/files/${iconNum(icon)}-s.png`}\n\t\t\t\talt={description}\n\t\t\t/>\n\t\t</div>\n\t</Container>\n);\n","import React, { Fragment } from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@mui/material';\nimport { Actions } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nconst useStyles = makeStyles({\n    action: {\n        fontSize: '2.6rem',\n        padding: '0.5rem',\n        display: 'flex',\n    },\n    root: {\n        margin: '10px',\n        marginTop: '30px',\n        marginLeft: '50px',\n        marginBottom: '50px',\n        maxWidth: 200,\n        height: '12rem',\n        width: '9rem',\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        background: 'linear-gradient(rgba(0, 185, 195, 0.5), rgba(16, 76, 120, 0.1))',\n        borderRadius: '0.5rem',\n        padding: '10px',\n        border: '3px solid rgba(32, 45, 44, 0.7)',\n        boxShadow: '2px 2px 2px rgba(29, 40, 44, 0.5)'\n    },\n});\n\nconst isFavorite = (favorites, currentCity) => {\n    return favorites.findIndex(city => city.Key === currentCity?.Key) !== -1\n}\n\nconst RemoveFromFavorites = ({\n    onClick,\n    title = 'Add to favorites',\n}) => (\n    <Tooltip title={title}>\n        <FavoriteBorderIcon\n            cursor='pointer'\n            aria-label={title}\n            color='error'\n            onClick={onClick}\n        />\n    </Tooltip>\n);\n\nconst AddToFavorites = ({\n    onClick,\n    title = 'Remove from favorites',\n}) => (\n    <Tooltip title={title}>\n        <Favorite\n            cursor='pointer'\n            aria-label={title}\n            color='secondary'\n            onClick={onClick}\n\n        />\n    </Tooltip>\n);\nexport const FavoriteCity = ({ onClick, name, weatherText, weatherIcon, celsius, fahrenheit, selectedUnit }) => {\n    const classes = useStyles()\n\n    return (\n        <Fragment>\n            <Card className={classes.root} onClick={onClick}>\n                <CardContent style={{ textAlign: \"center\" }} >\n                    <Typography component={'h3'} variant=\"h6\">\n                        {name}\n                    </Typography>\n\n                    <Typography>\n                        {selectedUnit === 'C' ? `${celsius?.toFixed(1)}° C` : `${fahrenheit?.toFixed(1)}° F`}\n                    </Typography>\n\n                    <img\n                        alt={weatherText}\n                        src={`https://developer.accuweather.com/sites/default/files/${weatherIcon}-s.png`} />\n\n                    <Typography>\n                        {weatherText}\n                    </Typography>\n\n                </CardContent>\n            </Card>\n        </Fragment>\n    )\n}\n\nexport const CurrentCity = () => {\n    const currentCity = useSelector(state => state.currentCity.data);\n    const dispatch = useDispatch();\n    const favorites = useSelector(state => state.favorites.data);\n\n    return (\n        isFavorite(favorites, currentCity) ? (\n            <AddToFavorites onClick={() => dispatch(Actions.FavoriteCities.remove({ Key: currentCity.Key }))} />\n        )\n            :\n            <RemoveFromFavorites onClick={() => dispatch(Actions.FavoriteCities.add({ Key: currentCity.Key, Name: currentCity.Name }))} />\n    )\n};\n\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport { getCurrentLocationUrl } from '../api'\nimport axios from 'axios';\nimport { Actions } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IconButton } from '@mui/material';\n\n\n\nexport const LocationIcon = () => {\n    const title = 'Search by your location';\n    const location = useSelector(state => state.location.data);\n    const hasNavigationError = useSelector(state => state.location.hasNavigationError)\n    const dispatch = useDispatch();\n\n    const onClick = () => {\n        if (hasNavigationError) {\n            alert(\"You need to approve your location in the browser\");\n            return;\n        }\n        axios.get(getCurrentLocationUrl(location.latitude, location.longitude)).then(\n            res => {\n                dispatch(Actions.CurrentCity.setCity({ Name: res.data.LocalizedName, Key: res.data.Key }));\n            }\n        )\n    }\n\n    return (\n        <div>\n            <Tooltip title={title}>\n                <IconButton onClick={onClick}>\n                    <MyLocationIcon\n                        cursor='pointer'\n                        aria-label={title}\n                        color=\"primary\"\n                    />\n                </IconButton>\n            </Tooltip>\n        </div>\n\n    )\n}\n\n\n","import React from 'react';\nimport { WeatherIcon } from './weatherIcon';\nimport { CurrentCity } from './favoriteIcon';\nimport { useSelector } from 'react-redux';\nimport { Container, Grid, Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@mui/material/IconButton';\nimport { LocationIcon } from './locationIcon';\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tmarginTop: '20px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tborder: '2px solid #eee',\n\t\tborderRadius: '0.5rem',\n\t\tpadding: '1rem',\n\t\tmarginBottom: '15px',\n\t},\n\tactions: {\n\t\tmarginLeft: 'auto'\n\t},\n\tinformation: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\tlocation: {\n\t\ttextAlign: 'start',\n\t\tmargin: 0\n\t},\n\tdescription: {\n\t\ttextAlign: 'center',\n\t\tfontSize: '50px',\n\t\talignItems: 'center',\n\t\tjustify: 'center'\n\t}\n});\n\nexport const CurrentCondition = ({ selectedUnit }) => {\n\tconst classes = useStyles();\n\tconst currentCity = useSelector(state => state.currentCity.data);\n\n\tif (!currentCity) {\n\t\treturn 'no city';\n\t}\n\n\treturn (\n\t\tcurrentCity && (\n\t\t\t<>\n\t\t\t\t<Container>\n\t\t\t\t\t<Grid container className={classes.container}>\n\t\t\t\t\t\t<Grid item className={classes.information} >\n\t\t\t\t\t\t\t<WeatherIcon icon={currentCity?.WeatherIcon} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item className={classes.location}>\n\t\t\t\t\t\t\t<Typography component={'h3'} variant=\"h6\">\n\t\t\t\t\t\t\t\t{currentCity.Name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t{selectedUnit === 'C' ? `${currentCity?.Temperature?.Metric?.Value}° C` : `${currentCity?.Temperature?.Imperial?.Value}° F`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid className={classes.actions}>\n\t\t\t\t\t\t\t<IconButton >\n\t\t\t\t\t\t\t\t<LocationIcon />\n\t\t\t\t\t\t\t\t<CurrentCity />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography component={'h5'}\n\t\t\t\t\t\t\tvariant={'h5'}\n\t\t\t\t\t\t\talign={'center'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{currentCity.WeatherText}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t</Container>\n\t\t\t</>\n\t\t)\n\t);\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { WeatherDay } from \"./weatherDay\";\nimport { Actions } from \"../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SearchCity } from \"./search\";\nimport { CssBaseline, Grid, Container, Typography } from \"@material-ui/core\";\nimport { CurrentCondition } from \"./currentCondition\";\nimport { iconNum } from \"./weatherIcon\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import useMediaQuery from '@mui/material/useMediaQuery';\nimport Alert from \"@mui/material/Alert\";\nimport { getFiveDaysUrl, getCurrentConditionUrl, ToFahrenheit } from \"../api\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  gridCointainer: {\n    padding: \"80px 50px 50px 100px\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    align: \"center\",\n    justifyContent: \"center\",\n    margin: \"0\",\n  },\n\n  weatherGrid: {\n    alignItems: \"center\",\n    border: \"1px solid rgba(173, 173, 235)\",\n    boxShadow: \"2px 2px 2px rgba(27, 38, 44, 0.5)\",\n    marginRight: \"20px\",\n    marginLeft: \"20px\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    color: \"rgb(0,76,153)\",\n    paddingTop: \"15px\",\n    marginButtom: \"15px\",\n  },\n});\n\nexport const Home = () => {\n  const classes = useStyles();\n  // const matches = useMediaQuery('(min-width:600px)');\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const dailyForecasts = useSelector((state) => state.dailyForecasts.data);\n  const defaultTempUnit = useSelector(\n    (state) => state.dailyForecasts.defaultTempUnit\n  );\n  const currentCity = useSelector((state) => state.currentCity.data);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(getFiveDaysUrl(currentCity.Key))\n      .then((res) => {\n        setIsPending(false);\n        setError(null);\n\n        dispatch(\n          Actions.DailyForecasts.setForcast(\n            res.data.DailyForecasts.map((daily) => {\n              return {\n                date: daily.Date,\n                weatherIcon: iconNum(daily.Day.Icon),\n                weatherDescription: daily.Day.IconPhrase,\n                celsius: daily.Temperature.Maximum.Value,\n                fahrenheit: ToFahrenheit(daily.Temperature.Maximum.Value),\n              };\n            })\n          )\n        );\n      })\n      .catch((err) => {\n        setIsPending(false);\n        setError(err.message);\n      });\n    axios\n      .get(getCurrentConditionUrl(currentCity.Key))\n      .then((res) => {\n        const data = {\n          weatherText: res.data[0].WeatherText,\n          weatherIcon: iconNum(res.data[0].WeatherIcon),\n          celsius: res.data[0].Temperature.Metric.Value,\n          fahrenheit: res.data[0].Temperature.Imperial.Value,\n        };\n        dispatch(Actions.CurrentCity.setCity(res.data[0]));\n      })\n      .catch((err) => {\n        setIsPending(false);\n        setError(err.message);\n      });\n  }, [currentCity.Key]);\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <div>\n        {error && (\n          <Alert variant=\"filled\" severity=\"error\">\n            {error}\n          </Alert>\n        )}\n      </div>\n\n      <Container fixed>\n        <Grid container spacing={2} className={classes.gridCointainer}>\n          {isPending && <div>Loading...</div>}\n          <Grid item xs={12}>\n            <SearchCity />\n          </Grid>\n\n          <Grid item xs={12} className={classes.weatherGrid}>\n            <Grid item>\n              <CurrentCondition selectedUnit={defaultTempUnit} />\n            </Grid>\n\n            <Grid className={classes.title}>\n              <Typography component=\"h5\" variant=\"h4\" color=\"primary\">\n                Five Days Forcast\n              </Typography>\n            </Grid>\n\n            <Grid container spacing={2}>\n              {dailyForecasts.map((dailyForecast, i) => (\n                <WeatherDay\n                  key={i}\n                  {...dailyForecast}\n                  selectedUnit={defaultTempUnit}\n                />\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </Fragment>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Grid, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FavoriteCity } from \"./favoriteIcon\";\nimport { Actions } from \"../store\";\nimport { iconNum } from \"./weatherIcon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentConditionUrl } from \"../api\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  gridCointainer: {\n    padding: \"80px 50px 50px 100px\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    align: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    align: \"center\",\n    paddingTop: \"70px\",\n    paddingBottom: \"50px\",\n  },\n  subtitle: {\n    paddingTop: \"80px\",\n  },\n});\n\nexport const Favorites = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const defaultTempUnit = useSelector(\n    (state) => state.dailyForecasts.defaultTempUnit\n  );\n  const [items, setItems] = useState([]);\n  const favorites = useSelector((state) => state.favorites.data);\n\n  const onClick = (payload) => {\n    dispatch(Actions.CurrentCity.setCity(payload));\n    history.push(\"/\");\n  };\n\n  useEffect(() => {\n    const promises = favorites.map((fav) =>\n      axios.get(getCurrentConditionUrl(fav.Key))\n    );\n    Promise.all(promises).then((responses) => {\n      const result = responses.map((res, i) => {\n        return {\n          weatherText: res.data[0].WeatherText,\n          weatherIcon: iconNum(res.data[0].WeatherIcon),\n          celsius: res.data[0].Temperature.Metric.Value,\n          fahrenheit: res.data[0].Temperature.Imperial.Value,\n          name: favorites[i].Name,\n          key: favorites[i].Key,\n        };\n      });\n      setItems(result);\n    });\n  }, [favorites]);\n\n  return (\n    <Container fixed>\n      <Grid container spacing={3} className={classes.gridCointainer}>\n        <Grid item xs={12} className={classes.title}>\n          <Typography\n            component={\"h4\"}\n            variant={\"h4\"}\n            color={\"blue\"}\n            align={\"center\"}\n          >\n            Your Favorite Cities\n          </Typography>\n        </Grid>\n\n        {favorites ? (\n          <Grid container spacing={2}>\n            {items.map((favorite, i) => (\n              <FavoriteCity\n                onClick={() =>\n                  onClick({ Key: favorite.key, Name: favorite.name })\n                }\n                key={i}\n                {...favorite}\n                selectedUnit={defaultTempUnit}\n              />\n            ))}\n          </Grid>\n        ) : (\n          <Grid className={classes.subtitle}>\n            <NoFavorites />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nconst NoFavorites = () => {\n  return (\n    <div>\n      <Typography component={\"h6\"} variant={\"h6\"}>\n        There are no favorite cities. Please Choose\n      </Typography>\n    </div>\n  );\n};\n","import React, { Fragment, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { Header } from \"./components/appbar\";\nimport { Paper } from \"@material-ui/core\";\nimport { Home } from \"./components/home\";\nimport { Favorites } from \"./components/favorites\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Actions } from \"./store\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const favorites = useSelector((state) => state.favorites.data);\n  const dispatch = useDispatch();\n\n  const onSuccess = (currentLocation) => {\n    dispatch(\n      Actions.CurrentLocation.setLocation({\n        latitude: currentLocation.coords.latitude,\n        longitude: currentLocation.coords.longitude,\n      })\n    );\n  };\n\n  const onError = (error) => {\n    dispatch(Actions.CurrentLocation.setNavigationError(true));\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  const darkLightTheme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkLightTheme}>\n      <Fragment>\n        <Paper className=\"paper\">\n          <div className=\"App\">\n            <Header check={darkMode} change={() => setDarkMode(!darkMode)} />\n            <Router>\n              <Switch>\n                <Route path=\"/favorites\" component={Favorites} />\n                <Route path=\"/\" component={Home} />\n              </Switch>\n            </Router>\n          </div>\n        </Paper>\n      </Fragment>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}